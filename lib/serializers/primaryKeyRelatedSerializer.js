// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var PrimaryKeyRelatedSerializer, Promise, Serializer, _,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  _ = require('underscore');

  Promise = require('bluebird');

  Serializer = require('./serializer');

  PrimaryKeyRelatedSerializer = (function(superClass) {
    extend(PrimaryKeyRelatedSerializer, superClass);

    PrimaryKeyRelatedSerializer.acceptedParameters = ['many'];

    function PrimaryKeyRelatedSerializer(arg) {
      this.many = (arg != null ? arg : {}).many;
      if (this.many == null) {
        this.many = false;
      }
      _.each(arguments[0], (function(_this) {
        return function(val, key) {
          if (!(indexOf.call(_this.constructor.acceptedParameters, key) >= 0)) {
            throw new TypeError("Parameter '" + key + " is not accepted in " + _this.constructor.name + "'");
          }
        };
      })(this));
    }

    PrimaryKeyRelatedSerializer.prototype.getData = function() {
      return new Promise((function(_this) {
        return function(resolve, reject) {
          if (_this.many) {
            return resolve(_.map(_this.data, function(val) {
              if (val[val.constructor.metadata.primaryKey] != null) {
                return val[val.constructor.metadata.primaryKey];
              }
              return reject(new TypeError("Related field of " + val.constructor.metadata.model + " does not have primary key set!"));
            }));
          } else {
            if (_this.data[_this.data.constructor.metadata.primaryKey] != null) {
              resolve(_this.data[_this.data.constructor.metadata.primaryKey]);
            }
            return reject(new TypeError("Related field of " + val.constructor.metadata.model + " does not have primary key set!"));
          }
        };
      })(this));
    };

    return PrimaryKeyRelatedSerializer;

  })(Serializer);

  module.exports = PrimaryKeyRelatedSerializer;

}).call(this);
